{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\fswiss\fcharset0 ArialMT;
\f3\fnil\fcharset0 Consolas;}
{\colortbl;\red255\green255\blue255;\red180\green0\blue98;\red255\green255\blue255;\red0\green0\blue0;
\red92\green38\blue153;\red68\green137\blue147;\red46\green13\blue110;\red77\green0\blue158;\red186\green0\blue17;
\red11\green96\blue192;\red27\green29\blue31;\red255\green255\blue255;\red87\green96\blue105;\red13\green0\blue129;
\red235\green236\blue237;\red36\green38\blue41;\red104\green26\blue29;\red37\green127\blue159;\red43\green39\blue19;
}
{\*\expandedcolortbl;;\csgenericrgb\c70682\c0\c38264;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c0\c0\c0;
\csgenericrgb\c35900\c14900\c60100;\csgenericrgb\c26518\c53646\c57619;\csgenericrgb\c18100\c5200\c43100;\csgenericrgb\c30278\c0\c61966;\csgenericrgb\c72768\c0\c6662;
\cssrgb\c0\c46667\c80000;\cssrgb\c14118\c15294\c16078;\cssrgb\c100000\c100000\c100000;\cssrgb\c41569\c45098\c48627;\cssrgb\c6275\c6275\c58039;
\cssrgb\c93725\c94118\c94510;\cssrgb\c18824\c20000\c21176;\cssrgb\c49020\c15294\c15294;\cssrgb\c16863\c56863\c68627;\cssrgb\c22353\c20000\c9412;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww22480\viewh8520\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 iOS \
\
\pard\tx939\pardeftab939\pardirnatural\partightenfactor0

\f1\fs38 \cf2 \cb3 String to float and then string \
\
let\cf4  price: \cf5 Float\cf4  = \cf5 Float\cf4 (\cf6 txtPrice\cf4 .\cf6 text\cf4 !)!
\f0\fs24 \cf0 \

\f1\fs38 \cf7 print\cf4 (\cf8 NSString\cf4 (format: \cf9 "%.2f"\cf4 , price))
\f0\fs24 \cf0 \
\
\
\
Notification \
\

\f1\fs38 \cf4         \cf8 NotificationCenter\cf4 .\cf2 default\cf4 .\cf7 addObserver\cf4 (\cf2 self\cf4 , selector: \cf2 #selector\cf4 (\cf2 self\cf4 .btnClose_Click(\cf2 _\cf4 :)), name: \cf6 closeNotificationName\cf4 , object: \cf2 nil\cf4 )
\f0\fs24 \cf0 \
\
\

\f1\fs38 \cf4 refreshManage
\f0\fs24 \cf0 \
\
\
\
\
\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat12 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth920\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr300 \gaph\cellx4320
\clvertalt \clshdrawnil \clwWidth13200\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl20\qc\partightenfactor0

\f2\fs2 \cf10 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 down vote\
\pard\intbl\itap1\pardeftab720\sl20\qc\partightenfactor0
\cf13 \strokec13 accepted\cell 
\pard\intbl\itap1\pardeftab720\sl380\sa300\partightenfactor0

\fs30 \cf11 \strokec11 If I understand you correctly, you could do it like so:\
\pard\intbl\itap1\pardeftab720\sl320\partightenfactor0

\f3\fs26 \cf14 \cb15 \strokec14 let\cf16 \strokec16  myList = [\
    \cf17 \strokec17 2\cf16 \strokec16 : \cf17 \strokec17 "Hello"\cf16 \strokec16 ,\
    \cf17 \strokec17 4\cf16 \strokec16 : \cf17 \strokec17 "Goodbye"\cf16 \strokec16 ,\
    \cf17 \strokec17 8\cf16 \strokec16 : \cf17 \strokec17 "Whats up"\cf16 \strokec16 ,\
    \cf17 \strokec17 16\cf16 \strokec16 : \cf17 \strokec17 "Hey"\cf16 \strokec16 \
]\
\
\cf14 \strokec14 let\cf16 \strokec16  index = \cf18 \strokec18 Array\cf16 \strokec16 (myList.keys).index(of: property.propertyValue)\cf19 \strokec19 \
\pard\intbl\itap1\pardeftab720\sl380\sa300\partightenfactor0

\f2\fs30 \cf11 \cb1 \strokec11 And then to find the key you're looking for again...\
\pard\intbl\itap1\pardeftab720\sl320\partightenfactor0

\f3\fs26 \cf14 \cb15 \strokec14 let\cf16 \strokec16  key = \cf18 \strokec18 Array\cf16 \strokec16 (myList.keys)[index!]\cf19 \strokec19 \
\
\
\
\
********************\
\
\cell \lastrow\row
\pard\pardeftab720\sl340\sa300\partightenfactor0

\f2\fs30 \cf11 \cb12 \strokec11 Use the\'a0
\f3\fs26 \cb15 filter
\f2\fs30 \cb12 \'a0function\
\pard\pardeftab720\sl300\partightenfactor0

\f3\fs26 \cf14 \cb15 \strokec14 let\cf16 \strokec16  foo = [\
  [\cf17 \strokec17 "selectedSegment"\cf16 \strokec16 :\cf17 \strokec17 0\cf16 \strokec16 , \cf17 \strokec17 "severity"\cf16 \strokec16 :\cf17 \strokec17 3\cf16 \strokec16 , \cf17 \strokec17 "dataDictKey"\cf16 \strokec16 : \cf17 \strokec17 "critical"\cf16 \strokec16 ],\
  [\cf17 \strokec17 "selectedSegment"\cf16 \strokec16 :\cf17 \strokec17 1\cf16 \strokec16 , \cf17 \strokec17 "severity"\cf16 \strokec16 :\cf17 \strokec17 2\cf16 \strokec16 , \cf17 \strokec17 "dataDictKey"\cf16 \strokec16 : \cf17 \strokec17 "major"\cf16 \strokec16 ],\
  [\cf17 \strokec17 "selectedSegment"\cf16 \strokec16 :\cf17 \strokec17 2\cf16 \strokec16 , \cf17 \strokec17 "severity"\cf16 \strokec16 :\cf17 \strokec17 1\cf16 \strokec16 , \cf17 \strokec17 "dataDictKey"\cf16 \strokec16 : \cf17 \strokec17 "minor"\cf16 \strokec16 ],\
]\
\
\cf14 \strokec14 let\cf16 \strokec16  filteredArray = foo.filter\{$\cf17 \strokec17 0\cf16 \strokec16 [\cf17 \strokec17 "severity"\cf16 \strokec16 ]! == \cf17 \strokec17 2\cf16 \strokec16 \}\
print(filteredArray.first ?? \cf17 \strokec17 "Item not found"\cf16 \strokec16 )\cf19 \strokec19 \
\pard\pardeftab720\sl340\sa300\partightenfactor0

\f2\fs30 \cf11 \cb12 \strokec11 or\'a0
\f3\fs26 \cb15 indexOf
\f2\fs30 \cb12 \
\pard\pardeftab720\sl300\partightenfactor0

\f3\fs26 \cf14 \cb15 \strokec14 if\cf16 \strokec16  \cf14 \strokec14 let\cf16 \strokec16  filteredArrayIndex = foo.indexOf(\{$\cf17 \strokec17 0\cf16 \strokec16 [\cf17 \strokec17 "severity"\cf16 \strokec16 ]! == \cf17 \strokec17 2\cf16 \strokec16 \}) \{\
  print(foo[filteredArrayIndex])\
\} \cf14 \strokec14 else\cf16 \strokec16  \{\
  print(\cf17 \strokec17 "Item not found"\cf16 \strokec16 )\
\}\cf19 \strokec19 \
\pard\pardeftab720\sl340\sa300\partightenfactor0

\f2\fs30 \cf11 \cb12 \strokec11 or\'a0
\f3\fs26 \cb15 NSPredicate
\f2\fs30 \cb12 \
\pard\pardeftab720\sl300\partightenfactor0

\f3\fs26 \cf14 \cb15 \strokec14 let\cf16 \strokec16  predicate = \cf18 \strokec18 NSPredicate\cf16 \strokec16 (format: \cf17 \strokec17 "severity == 2"\cf16 \strokec16 )\
\cf14 \strokec14 let\cf16 \strokec16  filteredArray = (foo \cf14 \strokec14 as\cf16 \strokec16  \cf18 \strokec18 NSArray\cf16 \strokec16 ).filteredArrayUsingPredicate(predicate)\
print(filteredArray.first ?? \cf17 \strokec17 "Item not found"\cf16 \strokec16 )\cf19 \strokec19 \
\pard\pardeftab720\sl340\sa300\partightenfactor0

\f2\b\fs30 \cf11 \cb12 \strokec11 Swift 3 Update:
\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl300\sa150\partightenfactor0
\ls1\ilvl0
\f3\fs26 \cf11 \cb15 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec11 indexOf(
\f2\fs30 \cb12 \'a0has been renamed to\'a0
\f3\fs26 \cb15 index(where:
\f2\fs30 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl300\partightenfactor0
\ls1\ilvl0
\f3\fs26 \cf11 \cb15 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec11 filteredArrayUsingPredicate(predicate)
\f2\fs30 \cb12 \'a0has been renamed to\'a0
\f3\fs26 \cb15 filtered(using: predicate)
\f2\fs30 \cb1 \
}